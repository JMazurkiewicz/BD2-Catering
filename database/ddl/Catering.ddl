-- Generated by Oracle SQL Developer Data Modeler 21.1.0.092.1221
--   at:        2021-06-05 15:29:41 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE additional_costs (
    value                    NUMBER(8, 2),
    cause                    VARCHAR(40) 
--  ERROR: VARCHAR2 size not specified 
    ,
    zmówienie_id_zamówienia  NUMBER(32, 4) NOT NULL
);

CREATE TABLE additional_information (
    information              VARCHAR2(40 CHAR) NOT NULL,
    informacja_dodatkowa_id  NUMBER NOT NULL
);

ALTER TABLE additional_information ADD CONSTRAINT informacja_dodatkowa_pk PRIMARY KEY ( informacja_dodatkowa_id );

CREATE TABLE address (
    address_id           NUMBER(5) NOT NULL,
    postal_code          VARCHAR2(6 CHAR) NOT NULL,
    street_name          VARCHAR2(16 BYTE) NOT NULL,
    building_number      VARCHAR2(5 CHAR) NOT NULL,
    apartment_number     VARCHAR2(5 CHAR),
    kliient_client_id    NUMBER(5) NOT NULL,
    city_city_id         NUMBER(5) NOT NULL,
    delivery_dostawa_id  NUMBER NOT NULL
);

CREATE UNIQUE INDEX address__idx ON
    address (
        kliient_client_id
    ASC );

CREATE UNIQUE INDEX address__idxv1 ON
    address (
        delivery_dostawa_id
    ASC );

ALTER TABLE address ADD CONSTRAINT address_pk PRIMARY KEY ( address_id );

CREATE TABLE allergen (
    name VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE allergen ADD CONSTRAINT alergeny_pk PRIMARY KEY ( name );

CREATE TABLE business (
    client_id  NUMBER(5) NOT NULL,
    nip        VARCHAR2(15 CHAR) NOT NULL
);

ALTER TABLE business ADD CONSTRAINT business_pk PRIMARY KEY ( client_id );

CREATE TABLE city (
    city_id   NUMBER(5) NOT NULL,
    name      VARCHAR2(20 CHAR) NOT NULL,
    district  VARCHAR2(20 CHAR)
);

ALTER TABLE city ADD CONSTRAINT city_pk PRIMARY KEY ( city_id );

CREATE TABLE delivery (
    dostawa_id                                NUMBER NOT NULL,
    cost                                      NUMBER(16, 2) NOT NULL,
    number_of_vehicles                        NUMBER(2) NOT NULL,
    order_order_id                            NUMBER(16, 4) NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    miejsce_wydarzenia_miejsce_wydarzenia_id  NUMBER NOT NULL,
    delivery_tips                             VARCHAR2(40 CHAR)
);

CREATE UNIQUE INDEX dostawa__idx ON
    delivery (
        order_order_id
    ASC );

CREATE UNIQUE INDEX dostawa__idxv1 ON
    delivery (
        miejsce_wydarzenia_miejsce_wydarzenia_id
    ASC );

ALTER TABLE delivery ADD CONSTRAINT dostawa_pk PRIMARY KEY ( dostawa_id );

CREATE TABLE drink_sizes (
    size_ml NUMBER(5) NOT NULL
);

ALTER TABLE drink_sizes ADD CONSTRAINT drink_sizes_pk PRIMARY KEY ( size_ml );

CREATE TABLE drinks (
    item_id          NUMBER(5) NOT NULL,
    alcohol_content  NUMBER(2)
);

ALTER TABLE drinks ADD CONSTRAINT drinks_pk PRIMARY KEY ( item_id );

CREATE TABLE employee (
    name                      VARCHAR2(32 CHAR) NOT NULL,
    surname                   VARCHAR2(32 CHAR) NOT NULL,
    pesel                     NUMBER(32) NOT NULL,
    phone_number              NUMBER(12) NOT NULL,
    bank_account_number       NUMBER(32, 4) NOT NULL,
    adres                     VARCHAR2(16 BYTE),
    employee_id               NUMBER(8, 4) NOT NULL,
    rodzaj_pracownika_rodzaj  VARCHAR2(16 BYTE) NOT NULL,
    zmówienie_id_zamówienia   NUMBER(32, 4),
    dostawa_dostawa_id        NUMBER,
    address_address_id        NUMBER(5)
);

ALTER TABLE employee ADD CONSTRAINT pracownicy_pk PRIMARY KEY ( employee_id );

CREATE TABLE employee_schedule (
    start_date                DATE,
    end_date                  DATE,
    accepted                  BLOB,
    pracownicy_id_pracownika  NUMBER(8, 4)
);

CREATE TABLE employee_type (
    typename VARCHAR2(16 BYTE) NOT NULL
);

ALTER TABLE employee_type ADD CONSTRAINT rodzaj_pracownika_pk PRIMARY KEY ( typename );

CREATE TABLE kliient (
    client_id NUMBER(5) NOT NULL
);

ALTER TABLE kliient ADD CONSTRAINT client_pk UNIQUE ( client_id );

CREATE TABLE meals (
    item_id     NUMBER(5) NOT NULL,
    size_grams  NUMBER(4) NOT NULL
);

ALTER TABLE meals ADD CONSTRAINT meals_pk PRIMARY KEY ( item_id );

CREATE TABLE miejsce_wydarzenia (
    miejsce_wydarzenia_id     NUMBER NOT NULL,
    miasto                    VARCHAR2(32 CHAR) NOT NULL,
    adres                     VARCHAR2(16 BYTE) NOT NULL,
    kod_pocztowy              NUMBER(5) NOT NULL,
    "Wskazówki_dot._dojazdu"  VARCHAR2(32 BYTE) NOT NULL
);

ALTER TABLE miejsce_wydarzenia ADD CONSTRAINT miejsce_wydarzenia_pk PRIMARY KEY ( miejsce_wydarzenia_id );

CREATE TABLE "Order" (
    start_date           DATE NOT NULL,
    end_date             DATE,
    number_of_people     NUMBER(8, 2) NOT NULL,
    base_price           NUMBER(8, 2) NOT NULL,
    event_type           VARCHAR2(50 CHAR) NOT NULL,
    waiters_needed       BLOB NOT NULL,
    order_id             NUMBER(32, 4) NOT NULL,
    kliient_kliient_id   NUMBER NOT NULL,
    dostawa_dostawa_id   NUMBER NOT NULL,
    kliient_client_id    NUMBER(5) NOT NULL,
    delivery_dostawa_id  NUMBER NOT NULL
);

CREATE UNIQUE INDEX zmówienie__idx ON
    "Order" (
        dostawa_dostawa_id
    ASC );

CREATE UNIQUE INDEX order__idx ON
    "Order" (
        delivery_dostawa_id
    ASC );

ALTER TABLE "Order" ADD CONSTRAINT zmówienie_pk PRIMARY KEY ( order_id );

CREATE TABLE ordered_meals (
    number_of_ordered_meals                 NUMBER(8) NOT NULL,
    additional_instructions                 VARCHAR2(32 BYTE),
    zmówienie_id_zamówienia                 NUMBER(16, 4) NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    pozycja_na_karcie_pozycja_na_karcie_id  NUMBER NOT NULL,
    pozycja_na_karcie_item_id               NUMBER(5) NOT NULL
);

CREATE TABLE person (
    client_id     NUMBER(5) NOT NULL,
    name          VARCHAR2(25 CHAR) NOT NULL,
    surname       VARCHAR2(25 CHAR) NOT NULL,
    phone_number  VARCHAR2(15 CHAR) NOT NULL,
    email         VARCHAR2(40 CHAR)
);

ALTER TABLE person ADD CONSTRAINT person_pk PRIMARY KEY ( client_id );

CREATE TABLE pozycja_na_karcie (
    item_id  NUMBER(5) NOT NULL,
    name     VARCHAR2(20 CHAR) NOT NULL,
    cost     NUMBER(5, 2) NOT NULL
);

ALTER TABLE pozycja_na_karcie ADD CONSTRAINT item_on_the_menu_pk UNIQUE ( item_id );

CREATE TABLE product (
    name                            VARCHAR2(32 CHAR) NOT NULL,
    wholesale_price                 NUMBER(5, 2) NOT NULL,
    catalog_number                  VARCHAR2(20 CHAR) NOT NULL,
    przechowalnie_przechowalnie_id  NUMBER,
    stored_products_batch_number    VARCHAR2(15 CHAR)
);

ALTER TABLE product ADD CONSTRAINT produkt_pk PRIMARY KEY ( catalog_number );

CREATE TABLE przechowalnie (
    przechowalnie_id NUMBER NOT NULL
);

ALTER TABLE przechowalnie ADD CONSTRAINT przechowalnie_pk PRIMARY KEY ( przechowalnie_id );

CREATE TABLE relation_12 ( 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    informacja_dodatkowa_informacja_dodatkowa_id  NUMBER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    pozycja_na_karcie_pozycja_na_karcie_id        NUMBER NOT NULL,
    pozycja_na_karcie_item_id                     NUMBER(5) NOT NULL
);

ALTER TABLE relation_12
    ADD CONSTRAINT relation_12_pk PRIMARY KEY ( informacja_dodatkowa_informacja_dodatkowa_id,
                                                pozycja_na_karcie_pozycja_na_karcie_id,
                                                pozycja_na_karcie_item_id );

CREATE TABLE relation_13 ( 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    pozycja_na_karcie_pozycja_na_karcie_id  NUMBER NOT NULL,
    produkt_nr_katalogowy                   VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
     NOT NULL,
    pozycja_na_karcie_item_id               NUMBER(5) NOT NULL
);

ALTER TABLE relation_13
    ADD CONSTRAINT relation_13_pk PRIMARY KEY ( pozycja_na_karcie_pozycja_na_karcie_id,
                                                produkt_nr_katalogowy,
                                                pozycja_na_karcie_item_id );

CREATE TABLE relation_14 (
    alergeny_nazwa         VARCHAR2(16 CHAR) NOT NULL,
    produkt_nr_katalogowy  VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
     NOT NULL
);

ALTER TABLE relation_14 ADD CONSTRAINT relation_14_pk PRIMARY KEY ( alergeny_nazwa,
                                                                    produkt_nr_katalogowy );

CREATE TABLE relation_31 (
    drink_sizes_size_ml  NUMBER(5) NOT NULL,
    drinks_item_id       NUMBER(5) NOT NULL
);

ALTER TABLE relation_31 ADD CONSTRAINT relation_31_pk PRIMARY KEY ( drink_sizes_size_ml,
                                                                    drinks_item_id );

CREATE TABLE storage (
    type                          VARCHAR2(10 CHAR) NOT NULL,
    stored_products_batch_number  VARCHAR2(15 CHAR)
);

ALTER TABLE storage ADD CONSTRAINT storage_pk PRIMARY KEY ( type );

CREATE TABLE stored_products (
    batch_number      VARCHAR2(15 CHAR) NOT NULL,
    available_amount  NUMBER(10, 2) NOT NULL,
    expiration_dare   DATE NOT NULL
);

ALTER TABLE stored_products ADD CONSTRAINT stored_products_pk PRIMARY KEY ( batch_number );

CREATE TABLE vehicles (
    capacity            NUMBER(32, 4) NOT NULL,
    fuel_usage          NUMBER(8, 4) NOT NULL,
    vehicle_id          NUMBER(8, 4) NOT NULL,
    dostawa_dostawa_id  NUMBER
);

ALTER TABLE vehicles ADD CONSTRAINT samochody_pk PRIMARY KEY ( vehicle_id );

ALTER TABLE address
    ADD CONSTRAINT address_city_fk FOREIGN KEY ( city_city_id )
        REFERENCES city ( city_id );

ALTER TABLE address
    ADD CONSTRAINT address_delivery_fk FOREIGN KEY ( delivery_dostawa_id )
        REFERENCES delivery ( dostawa_id );

ALTER TABLE address
    ADD CONSTRAINT address_kliient_fk FOREIGN KEY ( kliient_client_id )
        REFERENCES kliient ( client_id );

ALTER TABLE business
    ADD CONSTRAINT business_kliient_fk FOREIGN KEY ( client_id )
        REFERENCES kliient ( client_id );

ALTER TABLE delivery
    ADD CONSTRAINT delivery_order_fk FOREIGN KEY ( order_order_id )
        REFERENCES "Order" ( order_id );

ALTER TABLE additional_costs
    ADD CONSTRAINT dodatkowe_koszty_zmówienie_fk FOREIGN KEY ( zmówienie_id_zamówienia )
        REFERENCES "Order" ( order_id );

ALTER TABLE delivery
    ADD CONSTRAINT dostawa_miejsce_wydarzenia_fk FOREIGN KEY ( miejsce_wydarzenia_miejsce_wydarzenia_id )
        REFERENCES miejsce_wydarzenia ( miejsce_wydarzenia_id );

ALTER TABLE drinks
    ADD CONSTRAINT drinks_pozycja_na_karcie_fk FOREIGN KEY ( item_id )
        REFERENCES pozycja_na_karcie ( item_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_address_fk FOREIGN KEY ( address_address_id )
        REFERENCES address ( address_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE employee_schedule
    ADD CONSTRAINT grafik_pracownika_pracownicy_fk FOREIGN KEY ( pracownicy_id_pracownika )
        REFERENCES employee ( employee_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE ordered_meals
    ADD CONSTRAINT lista_zamówionych_dañ_zmówienie_fk FOREIGN KEY ( zmówienie_id_zamówienia )
        REFERENCES "Order" ( order_id );

ALTER TABLE meals
    ADD CONSTRAINT meals_pozycja_na_karcie_fk FOREIGN KEY ( item_id )
        REFERENCES pozycja_na_karcie ( item_id );

ALTER TABLE "Order"
    ADD CONSTRAINT order_delivery_fk FOREIGN KEY ( delivery_dostawa_id )
        REFERENCES delivery ( dostawa_id );

ALTER TABLE "Order"
    ADD CONSTRAINT order_kliient_fk FOREIGN KEY ( kliient_client_id )
        REFERENCES kliient ( client_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE ordered_meals
    ADD CONSTRAINT ordered_meals_pozycja_na_karcie_fk FOREIGN KEY ( pozycja_na_karcie_item_id )
        REFERENCES pozycja_na_karcie ( item_id );

ALTER TABLE person
    ADD CONSTRAINT person_kliient_fk FOREIGN KEY ( client_id )
        REFERENCES kliient ( client_id );

ALTER TABLE employee
    ADD CONSTRAINT pracownicy_dostawa_fk FOREIGN KEY ( dostawa_dostawa_id )
        REFERENCES delivery ( dostawa_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE employee
    ADD CONSTRAINT pracownicy_rodzaj_pracownika_fk FOREIGN KEY ( rodzaj_pracownika_rodzaj )
        REFERENCES employee_type ( typename );

ALTER TABLE employee
    ADD CONSTRAINT pracownicy_zmówienie_fk FOREIGN KEY ( zmówienie_id_zamówienia )
        REFERENCES "Order" ( order_id );

ALTER TABLE product
    ADD CONSTRAINT product_stored_products_fk FOREIGN KEY ( stored_products_batch_number )
        REFERENCES stored_products ( batch_number );

ALTER TABLE product
    ADD CONSTRAINT produkt_przechowalnie_fk FOREIGN KEY ( przechowalnie_przechowalnie_id )
        REFERENCES przechowalnie ( przechowalnie_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE relation_12
    ADD CONSTRAINT relation_12_informacja_dodatkowa_fk FOREIGN KEY ( informacja_dodatkowa_informacja_dodatkowa_id )
        REFERENCES additional_information ( informacja_dodatkowa_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE relation_12
    ADD CONSTRAINT relation_12_pozycja_na_karcie_fk FOREIGN KEY ( pozycja_na_karcie_item_id )
        REFERENCES pozycja_na_karcie ( item_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE relation_13
    ADD CONSTRAINT relation_13_pozycja_na_karcie_fk FOREIGN KEY ( pozycja_na_karcie_item_id )
        REFERENCES pozycja_na_karcie ( item_id );

ALTER TABLE relation_13
    ADD CONSTRAINT relation_13_produkt_fk FOREIGN KEY ( produkt_nr_katalogowy )
        REFERENCES product ( catalog_number );

ALTER TABLE relation_14
    ADD CONSTRAINT relation_14_alergeny_fk FOREIGN KEY ( alergeny_nazwa )
        REFERENCES allergen ( name );

ALTER TABLE relation_14
    ADD CONSTRAINT relation_14_produkt_fk FOREIGN KEY ( produkt_nr_katalogowy )
        REFERENCES product ( catalog_number );

ALTER TABLE relation_31
    ADD CONSTRAINT relation_31_drink_sizes_fk FOREIGN KEY ( drink_sizes_size_ml )
        REFERENCES drink_sizes ( size_ml );

ALTER TABLE relation_31
    ADD CONSTRAINT relation_31_drinks_fk FOREIGN KEY ( drinks_item_id )
        REFERENCES drinks ( item_id );

ALTER TABLE vehicles
    ADD CONSTRAINT samochody_dostawa_fk FOREIGN KEY ( dostawa_dostawa_id )
        REFERENCES delivery ( dostawa_id );

ALTER TABLE storage
    ADD CONSTRAINT storage_stored_products_fk FOREIGN KEY ( stored_products_batch_number )
        REFERENCES stored_products ( batch_number );

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated

CREATE SEQUENCE additional_information_informa START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER additional_information_informa BEFORE
    INSERT ON additional_information
    FOR EACH ROW
    WHEN ( new.informacja_dodatkowa_id IS NULL )
BEGIN
    :new.informacja_dodatkowa_id := additional_information_informa.nextval;
END;
/

CREATE SEQUENCE delivery_dostawa_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER delivery_dostawa_id_trg BEFORE
    INSERT ON delivery
    FOR EACH ROW
    WHEN ( new.dostawa_id IS NULL )
BEGIN
    :new.dostawa_id := delivery_dostawa_id_seq.nextval;
END;
/

CREATE SEQUENCE miejsce_wydarzenia_miejsce_wyd START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER miejsce_wydarzenia_miejsce_wyd BEFORE
    INSERT ON miejsce_wydarzenia
    FOR EACH ROW
    WHEN ( new.miejsce_wydarzenia_id IS NULL )
BEGIN
    :new.miejsce_wydarzenia_id := miejsce_wydarzenia_miejsce_wyd.nextval;
END;
/

CREATE SEQUENCE przechowalnie_przechowalnie_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER przechowalnie_przechowalnie_id BEFORE
    INSERT ON przechowalnie
    FOR EACH ROW
    WHEN ( new.przechowalnie_id IS NULL )
BEGIN
    :new.przechowalnie_id := przechowalnie_przechowalnie_id.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            28
-- CREATE INDEX                             6
-- ALTER TABLE                             56
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                  19
-- WARNINGS                                 0
